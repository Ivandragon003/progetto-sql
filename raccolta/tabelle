CREATE TABLE ristorante (
idRistorante INT PRIMARY KEY  ,
partitaIva VARCHAR(13) UNIQUE NOT NULL ,
via VARCHAR(100) ,
nome VARCHAR(50) NOT NULL ,
stelleMichelin int CHECK (stelleMichelin>=0 AND stelleMichelin<=3),
UNIQUE (partitaIva,nome)
);




CREATE TABLE chef (
codFiscale VARCHAR(16) PRIMARY KEY ,
nome VARCHAR(50) NOT NULL,
cognome VARCHAR(50) NOT NULL,
dataNascita DATE ,
Email varchar(60)  UNIQUE CHECK (Email ~* '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$') ,
anniEsperienza INT ,
disponibilita BOOL  
) ;


CREATE TABLE lavora (
    codFiscale VARCHAR(16) REFERENCES chef(codFiscale) ON DELETE CASCADE,
    idRistorante INT REFERENCES ristorante(idRistorante) ON DELETE CASCADE,
    PRIMARY KEY (codFiscale, idRistorante)
);


CREATE TYPE frequenza  AS ENUM ('ogniGiorno', 'ogniDueGiorni', 'settimanale' , 'biSettimanale', 'mensile', 'bimestrale','annuale');

CREATE TABLE corsoCucina (
idCorsoCucina INT PRIMARY KEY ,
nomeCorso VARCHAR(50) NOT NULL ,
argomento VARCHAR(50) NOT NULL,
frequenzaCorso frequenza NOT NULL ,
prezzo INT NOT NULL CHECK(prezzo >=0),
numeroPosti INT CHECK(numeroPosti > 0 ) ,
dataInizioCorso TIMESTAMP NOT NULL,
dataFineCorso TIMESTAMP NOT NULL,
CHECK (dataInizioCorso < dataFineCorso)
);



CREATE TABLE utente (
codFiscale VARCHAR(16) PRIMARY KEY ,
nome VARCHAR(50) NOT NULL,
cognome VARCHAR(50) NOT NULL,
dataNascita DATE ,
Email varchar(60)  UNIQUE CHECK (Email ~* '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$') 
) ;


CREATE TABLE iscritto (
codFiscale VARCHAR(16) REFERENCES utente(codFiscale),
idCorsoCucina INT REFERENCES corsoCucina (idCorsoCucina) ,
PRIMARY KEY (codFiscale,idCorsoCucina),
votiAvuti INT CHECK (votiAvuti>=0 AND votiAvuti<=10), 
stato BOOL NOT NULL 
) ;

CREATE TYPE tipoSessione AS ENUM ('inPresenza', 'online');

CREATE TABLE Sessione (
idSessione INT PRIMARY KEY, 
idCorsoCucina INT NOT NULL REFERENCES corsoCucina(idCorsoCucina), 
dataInizioSessione TIMESTAMP NOT NULL, 
dataFineSessione TIMESTAMP NOT NULL, 
tipo tipoSessione NOT NULL, 
piattaformaStreaming VARCHAR(50),
via VARCHAR(100),
citta VARCHAR(100),
cap VARCHAR(5)   CHECK (cap IS NULL OR cap ~ '^[0-9]{5}$') ,
numeroPosti INT CHECK (numeroPosti IS NULL OR numeroPosti > 0),
    
  CHECK (
        (tipo = 'online' AND piattaformaStreaming IS NOT NULL AND via IS NULL AND citta IS NULL AND cap IS NULL AND numeroPosti IS NULL)
        OR
        (tipo = 'inPresenza' AND piattaformaStreaming IS NULL AND via IS NOT NULL AND citta IS NOT NULL AND cap IS NOT NULL AND numeroPosti IS NOT NULL)
    ),
    
 CHECK (dataInizioSessione < dataFineSessione)
);


CREATE TABLE ricetta (
idRicetta INT PRIMARY KEY,
nome VARCHAR(50) NOT NULL,
tempoPreparazione INT
);

CREATE TABLE ingrediente(
idIngrediente INT PRIMARY KEY,
nome VARCHAR(50) NOT NULL,
tipo VARCHAR (50) NOT NULL
);

CREATE TABLE Usa (
    idRicetta INT REFERENCES Ricetta(idRicetta) ON DELETE CASCADE,
    idIngrediente INT REFERENCES Ingrediente(idIngrediente) ON DELETE CASCADE,
    quantita INT NOT NULL CHECK (quantita > 0),
    PRIMARY KEY (idRicetta, idIngrediente)
);
